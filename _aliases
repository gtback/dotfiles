#!/bin/bash

### Date aliases
alias today="date +%F"
alias now="date +%FT%T"

## "Improved" standard utils

# https://the.exa.website/
alias ls='exa'
alias l='exa -lFhg -m --time-style=long-iso'
alias ll='exa -l'
# https://github.com/sharkdp/bat
alias cat=bat
# https://github.com/muesli/duf
alias df=duf

### Git aliases
alias branch='git symbolic-ref --short HEAD'
alias ga='git add'
alias gb='git branch'
alias gba='git branch --all'
alias gbac='git branch --all --contains'
alias gbc='git branch --contains'
alias gc='git commit'
alias gcm='git checkout main 2>/dev/null || git checkout master'
alias gco='git checkout'
alias gd='git diff'
alias gdca='git diff --cached'
alias gfa='git fetch --all'
alias glg='git log --stat'
alias gm='git merge'
alias gpso='git push --set-upstream origin'
alias grv='git remote -v'
alias gsd='git stash drop'
alias gsl='git stash list'
alias gst='git status'

# https://medium.com/@mrWinston/smarter-git-checkout-using-fzf-to-supercharge-your-commandline-7507db600996
b () {
    git checkout "$(git branch --all | fzf | tr -d '[:space:]')"
}

# These git aliases are defined in _gitconfig
alias gpom="git pom"
alias gssp="git ssp"

### Python Aliases
alias lsvirtualenv="lsvirtualenv -b"
alias pyws="sed -i -e 's/^[ \r\t]*$//'"
alias pip-rm-all="python -m pip freeze | sed 's/^-e.*egg=//' | xargs python -m pip uninstall -y"
pip-upgrade-all() {
    python -m pip list --outdated --disable-pip-version-check | awk 'NR>2 {print $1 "==" $3}' | xargs python -m pip install
}
# Check if there's an existing alias for pip, and if so, remove it.
alias pip &> /dev/null && unalias pip
pip() {
    >&2 echo "Use 'python -m pip' instead"
}

alias version="echo -n \"VirtualBox \" && VBoxManage --version && vagrant --version && git --version && tmux -V &&  vim --version | head -1"

alias vagrant-ids="grep '.*' ~/code/**/.vagrant/machines/*/virtualbox/index_uuid"
alias zreload=". ~/.zshrc && echo 'ZSH config reloaded from ~/.zshrc'"
alias lspath='f(){echo ${PATH} | tr ":" "\n"};f'
alias proxies="env | grep -i proxy"

alias git=hub
alias ip="http https://httpbin.org/ip | jq -r '.origin'"
alias td=todoist
alias tg=toggl
alias tm="tmuxinator start"
alias xo="xargs open"

# List top level npm packages (global and local)
#   (https://gist.github.com/yyx990803/6045243)
alias nlg="npm list -g --depth=0 2>/dev/null"
alias nl="npm list --depth=0 2>/dev/null"

tlsdates() {
    echo | openssl s_client -servername "$1" -connect "$1":443 2>/dev/null | openssl x509 -noout -dates
}

### kubectl aliases
alias k=kubectl
alias kc=kubectx
alias kdp="kubectl describe pod"
alias kdelp="kubectl delete pod"
alias kge="kubectl get all"
alias kge="kubectl get events"
alias kgn="kubectl get namespaces"
alias kgp="kubectl get pods"
alias kunset="kubectl config unset current-context"

alias gunset="gcloud config unset account"

kn (){
    NAMESPACE=${1:-$(kubectl get namespaces | fzf | awk '{print $1}' )}
    kubectl config set-context --current --namespace="$NAMESPACE"
}

function gi() {
    for var in "$@"; do
        curl -sLw "\\n" "https://www.gitignore.io/api/$var" |
            grep -v "toptal" | sed '/./,/^$/!d' |
            sed '$d'
    done
}

function docker-rm-images() {
    docker image ls | grep "$1" | awk '{print $1 ":" $2}' | xargs -n 1 docker image rm
}

# https://github.com/Crazybus/dotfiles/blob/4f20e69420e76cdf268017170ac92969a5b7a23f/zshrcfunctions
function git-log-regex () {
    local filter
    if [ -n $@ ] && [ -f $@ ]
    then
        filter="-- $@"
    fi
    local gitlog=(git log --color=always --abbrev=7 --format='%C(auto)%h %C(yellow)%ad %an %C(blue) %s' --date=short --pickaxe-regex -S "$1" ./)
    local fzf=(fzf --ansi --no-sort --reverse --tiebreak=index --preview "f() { set -- \$(echo -- \$@ | grep -o '[a-f0-9]\{7\}'); [ \$# -eq 0 ] || git show --color=always \$1 $filter; }; f {}" --bind "ctrl-q:abort,ctrl-m:execute:
        (grep -o '[a-f0-9]\{7\}' | head -1 |
        xargs -I % sh -c 'git show --color=always % $filter | less -R') << 'FZF-EOF'
        {}
        FZF-EOF" --preview-window=right:60%)
    $gitlog | rg -v "Merge Pull Request" | $fzf
}
alias glr='git-log-regex'

function start () {
    eval "$(op signin ${OP_ACCOUNT})"
    eval "$(load-gh-token.sh)"
    ssh-add
}

function stop () {
    op signout
    unset GITHUB_TOKEN
    ssh-add -D
}

# Temporarily moving here to avoid shfmt and shellcheck problems in .zshrc
#compdef toggl
_toggl() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _TOGGL_COMPLETE=complete-zsh  toggl)
}
if [[ "$(basename -- ${(%):-%x})" != "_toggl" ]]; then
  compdef _toggl toggl
fi

function asdf-install-plugins () {
    awk '{print $1}' < "${ASDF_DEFAULT_TOOL_VERSIONS_FILENAME}" | xargs -n 1 asdf plugin add
}

function asdf-list-all () {
    for plugin in $(asdf plugin-list); do
        echo "$plugin"
        asdf list "$plugin"
    done
}

function all-node() {
    for version in $(asdf list nodejs); do
        echo "--NODEJS $version--"
        ASDF_NODE_VERSION=$version "$@"
    done
}

function all-python() {
    for version in $(asdf list python); do
        echo "--PYTHON $version--"
        ASDF_PYTHON_VERSION=$version "$@"
    done
}

function all-ruby() {
    for version in $(asdf list ruby); do
        echo "--RUBY $version--"
        ASDF_RUBY_VERSION=$version "$@"
    done
}

function all-rust() {
    for version in $(asdf list rust); do
        echo "--RUST $version--"
        ASDF_RUST_VERSION=$version "$@"
    done
}

function all-yarn() {
    for version in $(asdf list yarn); do
        echo "--YARN $version--"
        ASDF_YARN_VERSION=$version "$@"
    done
}

# https://stackoverflow.com/a/59412853/1136755
function seecert () {
    nslookup "$1"
    (openssl s_client -showcerts -servername "$1" -connect "$1:443" <<< "Q" | openssl x509 -text | grep -iA2 "Validity")
}
