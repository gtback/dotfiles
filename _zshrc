# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="dstufft"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(docker git python pip fabric rvm ruby vagrant celery django zsh-syntax-highlighting virtualenv nvm npm)

source $ZSH/oh-my-zsh.sh

# ----------CUSTOMIZATIONS---------------
setopt NO_NOMATCH

# Don't let shell builtin interfere with the statistical programming language.
disable r

os=`uname | tr '[:upper:]' '[:lower:]' | sed -e 's/_.*//'`

# From http://dougblack.io/words/zsh-vi-mode.html
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^j' down-history
bindkey '^k' up-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
export KEYTIMEOUT=1

for dotfile in aliases exports; do
  file="$HOME/.${dotfile}"
  [ -e "${file}" ] && source "${file}"
  [ -e "${file}.${os}" ] && source "${file}.${os}"
  [ -e "${file}.local" ] && source "${file}.local"
done

# [ -e $POWERLINE/bindings/zsh/powerline.zsh ] && source $POWERLINE/bindings/zsh/powerline.zsh

source /usr/local/bin/virtualenvwrapper.sh
source /usr/local/opt/nvm/nvm.sh
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
which tmuxp.sh >/dev/null && source tmuxp.zsh

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Start ssh-agent if it it is not already running.
SSHAGENT=/usr/bin/ssh-agent
SSHAGENTARGS="-s"
if [ -z "$SSH_AUTH_SOCK" -a -x "$SSHAGENT" ]; then
  eval `$SSHAGENT $SSHAGENTARGS`
  trap "kill $SSH_AGENT_PID" 0
fi

