[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

# Log of changes on origin not yet on branch (aka hg incoming).
	incoming = log HEAD..@{upstream}
# Log of changes on branch not yet on branch (aka hg outgoing).
	outgoing = log @{upstream}..HEAD

	rpo = remote prune origin
	rso = remote show origin
	pom = push origin master

	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = !git ls-files -v | grep ^h | cut -c 3-

	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"

	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

	ribbon = tag --force _ribbon origin/master
	catchup = log --patch --reverse --topo-order _ribbon..origin/master

	unstage = reset HEAD --

	last = log -1 HEAD

# Delete branches merged into the current branch
	dmb = "!git branch --merged | grep -v \"^\\*\" | xargs -n 1 git branch -d"

	mydiff = "!f () { echo $1 && echo $2 && git diff $(git merge-base $1 $2) $2; }; f"
	info = "!pushd ~/code/$1 && git remote -v && git branch -a && popd"

[color]
	ui = auto

[core]
	excludesfile = ~/.cvsignore
	trustctime = false

[diff]
	algorithm = patience

[push]
	default = simple

[include]
	path = .gitconfig.local
