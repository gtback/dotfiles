#!/bin/bash

### Date aliases
alias today="date +%F"
alias now="date +%FT%T"
alias utc.offset="date +%z"
alias utc.now="date -u +'%Y-%m-%dT%H:%M:%SZ'"

## "Improved" standard utils

# https://eza.rocks/
alias ls='eza'
alias l='eza --long --header --group --modified --time-style=long-iso'
alias ll='eza --long'
# https://github.com/sharkdp/bat
alias cat=bat
# https://github.com/muesli/duf
alias df=duf
# https://github.com/bootandy/dust
alias du=dust

alias version="echo -n \"VirtualBox \" && VBoxManage --version && vagrant --version && git --version && tmux -V &&  vim --version | head -1"

alias vagrant-ids="grep '.*' ~/code/**/.vagrant/machines/*/virtualbox/index_uuid"
alias lspath='f(){echo ${PATH} | tr ":" "\n"};f'
alias proxies="env | grep -i proxy"

alias git=hub
alias ip="http https://httpbin.org/ip | jq -r '.origin'"
alias tm="tmuxinator start"
alias xo="xargs open"

# List top level npm packages (global and local)
#   (https://gist.github.com/yyx990803/6045243)
alias nlg="npm list -g --depth=0 2>/dev/null"
alias nl="npm list --depth=0 2>/dev/null"

function comm.in-both {
    comm -12 "$@"
}

function comm.only-in-first {
    comm -23 "$@"
}

function comm.only-in-second {
    comm -13 "$@"
}

zreload() {
    CONFIG_FILE=$ZDOTDIR/.zshrc
    # shellcheck source=../zsh/.zshrc
    source "$CONFIG_FILE"
    echo "Reloaded ZSH config from $CONFIG_FILE"
}
alias zr=zreload

function start() {
    eval "$(load-gh-token.sh)"
    ssh-add
    noti.setup
    tmux
}

function stop() {
    op signout
    unset GITHUB_TOKEN
    ssh-add -D
    noti.clear
}

# https://superuser.com/a/1246245
function pwg() {
    ENTROPY=${1:-20}

    head -c "$ENTROPY" /dev/random | base64 | tr -d '\n=+/'
    echo
}

# https://stackoverflow.com/a/76163772
# License: CC BY-SA 4.0
# Modified to:
# - add " || return" and wrap "$1" in quotes (shellcheck warnings)
# - formatting with shfmt
function cd() {
    # no arguments specified
    if [ $# -eq 0 ]; then
        builtin cd || return
    # argument is a file, which is a link
    elif [[ -f "$1" && -L "$1" ]]; then
        # recursive
        cd "$(readlink "$1")" || return
    # argument is a file
    elif [ -f "$1" ]; then
        builtin cd "$(dirname "$1")" || return
    # argument is not a file
    else
        builtin cd "$@" || return
    fi
}

# Change directory based on a relative path to the root of the git repo. This is
# useful when copying repository paths from GitHub, combined with the function
# above.
function cdr() {
    cd "$(git rev-parse --show-toplevel)/$1" || return
}
