#!/usr/bin/env python

# SPDX-FileCopyrightText: 2023 Greg Back <git@gregback.net>
# SPDX-License-Identifier: MIT

import datetime as dt
import os

import requests


HEADERS = {
    "Authorization": "token " + os.environ["GITHUB_TOKEN"],
}


def main() -> None:
    resp = requests.get("https://api.github.com/rate_limit", headers=HEADERS)
    if not resp.ok:
        print(f"An error occurred: {resp.json()}")
        return

    expires = resp.headers["github-authentication-token-expiration"]

    expires_dt = (
        dt.datetime.strptime(expires, "%Y-%m-%d %H:%M:%S UTC")
        .replace(tzinfo=dt.timezone.utc)
        .astimezone()
    )

    difference: dt.timedelta = expires_dt - dt.datetime.now(tz=dt.timezone.utc)
    if difference.total_seconds() > 0:
        if not difference.days:
            print(f"Token expires today: {expires_dt}")
        else:
            print(f"Token expires in {difference.days} days: {expires_dt}")
    else:
        if difference.days:
            print(f"Token expired today: {expires_dt}")
        else:
            print(f"Token expired {difference.days} days ago: {expires_dt}")


if __name__ == "__main__":
    main()
