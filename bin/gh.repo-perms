#!/bin/bash

# SPDX-FileCopyrightText: 2022-2023 Greg Back <git@gregback.net>
# SPDX-License-Identifier: MIT

set -uo pipefail

# TODO: allow passing the repo with or without the owner (user/org) prefix and
# determine it from $GITHUB_ORG or $GITHUB_USER.

function print-if-any() {
    type=$1
    role=$2
    who=$3

    [[ -n "$who" ]] && printf "== $type Role: $role ==\n%s\n\n" "$who"
}

function team-permissions() {
    # https://docs.github.com/en/rest/reference/repos#list-repository-teams
    teams=$(gh api --paginate "/repos/$1/teams?per_page=100")

    fields=".name"

    print-if-any "Team" "Admin" "$(echo "$teams" | jq -r ".[] | select( .permissions.admin ) | $fields")"
    print-if-any "Team" "Maintain" "$(echo "$teams" | jq -r ".[] | select( .permissions.maintain) | select(.permissions.admin | not ) | $fields")"
    print-if-any "Team" "Write" "$(echo "$teams" | jq -r ".[] | select( .permissions.push) | select(.permissions.maintain | not ) | $fields")"
    print-if-any "Team" "Triage" "$(echo "$teams" | jq -r ".[] | select( .permissions.triage) | select(.permissions.push | not ) | $fields")"
    print-if-any "Team" "Read" "$(echo "$teams" | jq -r ".[] | select( .permissions.pull) | select(.permissions.triage | not ) | $fields")"
}

function user-permissions() {
    # https://docs.github.com/en/rest/reference/collaborators#list-repository-collaborators
    users=$(gh api --paginate "/repos/$1/collaborators?affiliation=direct&per_page=100")

    fields=".login"

    print-if-any "User" "Admin" "$(echo "$users" | jq -r ".[] | select( .permissions.admin ) | $fields")"
    print-if-any "User" "Maintain" "$(echo "$users" | jq -r ".[] | select( .permissions.maintain) | select(.permissions.admin | not ) | $fields")"
    print-if-any "User" "Write" "$(echo "$users" | jq -r ".[] | select( .permissions.push) | select(.permissions.maintain | not ) | $fields")"
    print-if-any "User" "Triage" "$(echo "$users" | jq -r ".[] | select( .permissions.triage) | select(.permissions.push | not ) | $fields")"
    print-if-any "User" "Read" "$(echo "$users" | jq -r ".[] | select( .permissions.pull) | select(.permissions.triage | not ) | $fields")"
}

team-permissions "$1"
user-permissions "$1"
