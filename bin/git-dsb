#!/bin/bash

# Delete branches that have been squash-merged into the remote HEAD branch
# (usually `main` or `master`).

# From: https://github.com/not-an-aardvark/git-delete-squashed

# Run with `git dsb`

set -exuo pipefail

REMOTE=${GIT_DSB_REMOTE:-origin}

if git checkout -q "remotes/$REMOTE/HEAD"; then
    git for-each-ref refs/heads/ "--format=%(refname:short)" \
        | while read -r branch; do
            mergeBase=$(git merge-base "remotes/$REMOTE/HEAD" "$branch") \
                && [[ $(git cherry "remotes/$REMOTE/HEAD" "$(git commit-tree "$(git rev-parse "$branch"^\{tree\})" -p "$mergeBase" -m _)") == "-"* ]] \
                && git branch -D "$branch"
        done
fi

# Check out the remote HEAD branch. Without this you're in a detached-HEAD state.
# https://stackoverflow.com/a/19457164/1136755
git checkout "$(git ls-remote --heads "$REMOTE" | grep "$(git rev-parse HEAD)" | cut -d / -f 3-)"
